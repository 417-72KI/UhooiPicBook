name: CI

on:
  push:
    branches:
      - master
      - releases/**
      - develop
      - feature/**
  # pull_request:
    # branches:
      # - develop

jobs:
  test:
    runs-on: macOS-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_11.3.1.app/Contents/Developer
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin

    steps:
    # チェックアウト
    - uses: actions/checkout@v1

    # Xcodeの一覧出力
    - name: Show Xcode list
      run: ls /Applications | grep 'Xcode'

    # Xcodeのバージョン出力
    - name: Show Xcode version
      run: xcodebuild -version

    # Bundlerで管理しているライブラリのキャッシュ復元
    - name: Cache Gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    # Bundlerで管理しているライブラリのインストール
    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    # Mintのインストール
    - name: Install Mint
      run: brew install mint

    # Mintで管理しているライブラリのキャッシュ復元
    - name: Cache Mint packages
      uses: actions/cache@v1
      with:
        path: mint
        key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
        restore-keys: |
          ${{ runner.os }}-mint-

    # Carthageで管理しているライブラリのキャッシュ復元
    - name: Cache Carthage packages
      uses: actions/cache@v1
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-

    # Carthageで管理しているライブラリのインストール
    - name: Install Carthage frameworks
      run: |
        mint run carthage carthage bootstrap --platform iOS --cache-builds
        echo '*** Resolved dependencies:'
        cat 'Cartfile.resolved'
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # ライセンス表示の生成
    - name: Generate licenses with LicensePlist
      run: mint run LicensePlist license-plist --output-path UhooiPicBook/Settings.bundle --github-token ${{ secrets.GITHUB_TOKEN }}

    # プロジェクトファイルの生成
    - name: Generate Xcode project with XcodeGen
      run: mint run xcodegen xcodegen generate

    # CocoaPodsで管理しているライブラリのキャッシュ復元
    - name: Cache Pods
      uses: actions/cache@v1
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    # CocoaPodsで管理しているライブラリのインストール
    - name: Pod install
      run: bundle exec pod install

    # ビルド
    - name: Xcode build
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -workspace UhooiPicBook.xcworkspace
        -scheme UhooiPicBook
        build
        | bundle exec xcpretty

    # 単体テストの実行
    - name: Xcode test
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -workspace UhooiPicBook.xcworkspace
        -scheme UhooiPicBook
        -destination 'platform=iOS Simulator,name=iPhone 11 Pro Max'
        -skip-testing:UhooiPicBookUITests
        clean test
        | bundle exec xcpretty
